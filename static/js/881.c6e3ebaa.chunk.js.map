{"version":3,"file":"static/js/881.c6e3ebaa.chunk.js","mappings":"2NACA,EAAmC,iCAAnC,EAAiF,2BAAjF,EAAgI,kCAAhI,EAA4L,wCAA5L,EAAuP,iC,4CCoGvP,EAhGe,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,YAApC,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WAERC,QAAQC,IAAIJ,EAASK,OAAOC,QAAQ,MAAO,KAC3C,IAAMC,EAAaP,EAASK,OAAOC,QAAQ,MAAO,IAClD,GAAmB,KAAfC,EAAJ,CAGI,IAAMC,EAAS,mCAAG,uGACYC,EAAAA,EAAAA,IAAaF,GADzB,gBACNG,EADM,EACNA,QACNX,EAAcW,GAFF,2CAAH,qDAIfF,GACH,CACF,GAAC,CAACR,EAASK,SAGZ,IAAMM,EAAe,mCAAG,WAAOC,GAAP,uEACpBT,QAAQC,IAAIR,GAEG,KAAXH,EACAI,EAAgB,CAAC,IAEjBe,EAAEC,iBACIL,EAFH,mCAEe,uGACYC,EAAAA,EAAAA,IAAahB,GADzB,iBACNiB,EADM,EACNA,SACII,OAAS,EACnBC,MAAM,wCAAD,OAAwCtB,EAAxC,OAELM,EAAcW,GALF,2CAFf,qDAYHF,IACAX,EAAgB,CAACmB,EAAE,GAAD,OAAIvB,KACtBC,EAAU,KAnBM,2CAAH,sDA+BrB,OACI,iCACI,gBAAKuB,UAAWC,EAAhB,UACC,kBAAMD,UAAWC,EAAjB,WACC,SAAC,KAAD,WACA,mBAAQC,KAAK,SAASF,UAAWC,EAAuBE,QAAST,EAAjE,UACE,iBAAMM,UAAWC,EAAjB,yBAIF,kBACEG,KAAK,SACLC,MAAO7B,EACP8B,SAjBS,SAACC,GAClB9B,EAAU8B,EAAMC,cAAcH,MACjC,EAgBWL,UAAWC,EACXC,KAAK,OACLO,aAAa,MACbC,WAAS,EACTC,YAAY,kCAKf9B,GACDA,EAAW+B,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAL,OACX,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,iBAAgBH,KAASI,MAAO,CAAEC,KAAMnC,GAA5D,UACE,0BAAG,qCAAH,IAAyB+B,QAFpBD,IAFA,MActB,C,uNChGDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACCC,EAAY,kCAEZ7B,EAAY,mCAAG,WAAM8B,GAAN,kFACpBC,EADoB,+BACkBH,EADlB,4DACyEE,GADzE,SAEKH,EAAAA,EAAAA,IAAUI,GAFf,uBAEZC,EAFY,EAElBC,KAFkB,kBAGnBD,GAHmB,2CAAH,sDAMZE,EAAe,mCAAG,WAAMC,GAAN,kFACvBJ,EADuB,gBACAI,EADA,qBACoBP,EADpB,4BAECD,EAAAA,EAAAA,IAAUI,GAFX,uBAEfK,EAFe,EAErBH,KAFqB,kBAGtBG,GAHsB,2CAAH,sDAMfC,EAAmB,mCAAG,+FAC3BN,EAD2B,qCACiBH,GADjB,SAEFD,EAAAA,EAAAA,IAAUI,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBM,EAAY,mCAAG,WAAMH,GAAN,kFACpBJ,EADoB,gBACGI,EADH,4BAC8BP,EAD9B,4BAEHD,EAAAA,EAAAA,IAAUI,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZM,EAAU,mCAAG,WAAMJ,GAAN,kFAClBJ,EADkB,gBACKI,EADL,6BACiCP,EADjC,mCAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Movies_container\":\"Movies_Movies_container__ZrBk1\",\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"SearchForm_button\":\"Movies_SearchForm_button__gq07l\",\"SearchForm_button_label\":\"Movies_SearchForm_button_label__5bg7O\",\"SearchForm_input\":\"Movies_SearchForm_input__ye37+\"};","import css from './Movies.module.css';\nimport {useState, useEffect } from 'react'; // пакети для роботи зі станом\nimport {Link, useSearchParams, useLocation} from 'react-router-dom';\nimport {searchMovies} from '../../services/movies-api';\n\nconst Movies = () => {\nconst [filter, setFilter] = useState(''); // Хук для filter\nconst [searchParams, setSearchParams] = useSearchParams();\nconst [listMovies, setListMovies] = useState();\nconst location = useLocation();\n\n\n\nuseEffect(()=>{\n\n  console.log(location.search.replace(\"?c=\", \"\"));\n  const searchLoad = location.search.replace(\"?c=\", \"\");\n  if (searchLoad === \"\"){\n    return\n  } else {\n      const getMovies = async () => {\n          const { results } = await searchMovies(searchLoad);\n            setListMovies(results);\n        };\n      getMovies();  \n  }\n},[location.search])\n\n\nconst getSearchParams = async (e) => {\n    console.log(searchParams);\n\n    if (filter === \"\"){\n        setSearchParams({});\n    } else {\n        e.preventDefault(); // Зупиняємо оновлення сторінки\n        const getMovies = async () => {\n            const { results } = await searchMovies(filter);\n            if (results.length < 1){\n              alert(`We didn't find film with this name \"${filter}\" `)\n            } else {\n              setListMovies(results);\n            }\n            \n          };\n\n        getMovies();  \n        setSearchParams({c:`${filter}`});\n        setFilter(\"\");\n    }\n\n\n}\n\n\n\nconst handleChange = (event) => {\n    setFilter(event.currentTarget.value);\n}\n\nreturn (\n    <>\n        <div className={css.Movies_container}>\n         <form className={css.SearchForm}>\n          <Link> \n          <button type=\"submit\" className={css.SearchForm_button} onClick={getSearchParams}>\n            <span className={css.SearchForm_button_label}>Search</span>\n          </button>\n          </Link> \n\n          <input\n            name=\"filter\"\n            value={filter}\n            onChange={handleChange}\n            className={css.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n        </div>\n\n        {listMovies &&\n        listMovies.map(({id,title}) => (\n            <ul>\n              <li key={id}>\n                <Link to={{ pathname: `/movies/${`${id}`}`}} state={{ from: location }}>\n                  <p><span>&#9733;</span> {title}</p>\n                </Link>\n              </li>\n            </ul>\n          )\n        )}\n    </>\n\n\n)    \n}\n\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3672c0915275ace21cbbe4fc0e9b5fda';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const queryString = `movie/${movieId}}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(queryString);\n  return data;\n};"],"names":["useState","filter","setFilter","useSearchParams","searchParams","setSearchParams","listMovies","setListMovies","location","useLocation","useEffect","console","log","search","replace","searchLoad","getMovies","searchMovies","results","getSearchParams","e","preventDefault","length","alert","c","className","css","type","onClick","name","value","onChange","event","currentTarget","autoComplete","autoFocus","placeholder","map","id","title","to","pathname","state","from","axios","KEY","IMAGE_URL","stringToSearch","queryString","movies","data","getMovieDetails","movieId","movie","fetchTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}